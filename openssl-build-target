#!/bin/bash -e

. config

CUR_DIR="$(pwd)"
OPENSSL_PATH="$DOWNLOAD_DIR/${OPENSSL_DIR_NAME}"
NDK_VER=r12b
NDK_D_NAME="android-ndk-$NDK_VER"

############################      FUNCTIONS     ##############################

function getNDKForOpenSSL {

    #NDK Version to download
    NDK_URL="https://dl.google.com/android/repository/android-ndk-$NDK_VER-darwin-x86_64.zip"
    echo "Downloading Android NDK ${NDK_VER} for OpenSSL ..."

    cd $OPENSSL_PATH
    curl -L -# -o ndk.zip "$NDK_URL" 2>&1
    rm -rf "$NDK_D_NAME"
    echo ""
    echo "Android NDK downloaded!"
    echo "Extracting Android NDK ..."
    echo ""
    unzip ndk.zip -d ndk
    mv ndk/$NDK_D_NAME .
    rm -rf ndk
    rm -rf ndk.zip

    cd $CUR_DIR
}

function clearBuildDirectory {
    echo " ... Removing OPENSSL_BUILD_OUT_PATH ..."
    rm -rf "${OPENSSL_BUILD_OUT_PATH}"
    mkdir -p "${LIB_PATH}"
    mkdir -p "${LOG_PATH}"
}

function clearNdkDirectory {
    if [ -d "$OPENSSL_PATH/${NDK_D_NAME}" ]
    then
        echo "... Removing NDK ... "
        rm -rf $OPENSSL_PATH/${NDK_D_NAME}
    fi
}

##############################################################################
############################        MAIN          ############################
##############################################################################

# Get the NDK version for OpenSSL which may differ from the one specified in config.conf
# if DOWNLOAD_NDK_R12B enabled
if [ "$DOWNLOAD_NDK_R12B" == "1" ]
then
    echo "... Starting download NDK r12b ..."
    NDK_PATH="$OPENSSL_PATH/${NDK_D_NAME}"
    getNDKForOpenSSL
else
    echo " ... Set NDK_PATH for r13b ..."
    NDK_PATH="$DOWNLOAD_DIR/$NDK_DIR_NAME"
fi

#GCC_VERSION=$(gcc --version | grep gcc | awk '{print $4}' | cut -d'.' -f1,2)
GCC_VERSION=4.9
LIB_PATH="${OPENSSL_BUILD_OUT_PATH}/libs"
LOG_PATH="${OPENSSL_BUILD_OUT_PATH}/logs"

# Clear and recreate the build output directory
clearBuildDirectory

# Build OpenSSL for each ARCH specified in config.site
for arch in "${TARGET_ARCHS[@]}"
do
    echo "Building OpenSSL for target arch $arch ..."
    ./openssl-build ${NDK_PATH} ${OPENSSL_PATH} ${OPENSSL_TARGET_NDK_LEVEL} \
                    ${arch} ${GCC_VERSION} "${LIB_PATH}/${arch}" \
                    >> "${LOG_PATH}/${arch}.log" 2>&1
done

# Clearing the NDK version for OpenSSL
clearNdkDirectory

echo "Finished building OpenSSL $OPENSSL_VERSION! Check output folder: ${OPENSSL_BUILD_OUT_PATH}"
